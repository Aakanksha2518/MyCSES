name: PR Template Compliance Check

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  issues: write

jobs:
  check-template-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR Template Compliance
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const prNumber = context.payload.pull_request.number;
          const prBody = context.payload.pull_request.body || '';
          const prAuthor = context.payload.pull_request.user.login;
          
          // Define required template sections
          const requiredSections = [
            'Problem Information',
            'Problem Name',
            'Category',
            'CSES Link',
            'Difficulty',
            'Description',
            'Solution Approach',
            'Algorithm Used',
            'Time Complexity',
            'Space Complexity',
            'Checklist'
          ];
          
          // Check which sections are missing
          const missingSections = requiredSections.filter(section => 
            !prBody.includes(section.replace(' ', '')) && !prBody.includes(section)
          );
          
          // Check if essential information is provided
          const hasEssentialInfo = prBody.length > 100 &&
                                  prBody.includes('**') && // Has formatting
                                  (prBody.includes('O(') || prBody.includes('complexity')) && // Has complexity info
                                  prBody.includes('Algorithm'); // Has algorithm info
          
          // Calculate compliance score
          const complianceScore = Math.round(((requiredSections.length - missingSections.length) / requiredSections.length) * 100);
          
          console.log(`📊 PR Template Compliance: ${complianceScore}%`);
          console.log(`📝 Missing sections: ${missingSections.join(', ')}`);
          
          // If compliance is low, add a helpful comment
          if (complianceScore < 70 || !hasEssentialInfo) {
            const templateGuideComment = `## 📋 PR Template Compliance Check\n\n` +
              `Hello @${prAuthor}! Thank you for your contribution. 🚀\n\n` +
              `### 📊 Template Compliance Score: ${complianceScore}%\n\n` +
              
              (complianceScore < 70 ? 
                `⚠️ **Your PR description could use some improvement to help reviewers understand your contribution better.**\n\n` :
                `✅ **Good job on following the template!** Just a few minor items to complete.\n\n`) +
              
              (missingSections.length > 0 ? 
                `### 📝 Missing or Incomplete Sections:\n${missingSections.map(s => `- ${s}`).join('\n')}\n\n` : '') +
              
              `### 🔧 How to Fix This:\n` +
              `1. **Edit your PR description** (click the pencil icon above)\n` +
              `2. **Copy our template** from [here](https://github.com/${owner}/${repo}/blob/main/.github/PULL_REQUEST_TEMPLATE.md)\n` +
              `3. **Fill in all the required information**:\n` +
              `   - Problem name and CSES link\n` +
              `   - Your algorithm and approach\n` +
              `   - Time/Space complexity analysis\n` +
              `   - Complete the checklist items\n\n` +
              
              `### 🎯 Why This Helps:\n` +
              `- **Faster reviews**: Reviewers can quickly understand your solution\n` +
              `- **Better feedback**: Detailed info leads to more helpful suggestions\n` +
              `- **Learning**: Explaining complexity helps solidify your understanding\n` +
              `- **Community**: Well-documented solutions help other learners\n\n` +
              
              `### 🔄 Next Steps:\n` +
              `- Edit your PR description and fill in the missing information\n` +
              `- Include problem name, algorithm, and complexity analysis\n` +
              `- Complete the checklist items\n\n` +
              
              `Feel free to ask questions if you need help! 😊\n\n` +
              `---\n` +
              `*Automated template compliance check*`;

            // Check if we already posted a similar comment to avoid spam
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });
            
            const hasExistingTemplateComment = comments.some(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Template Compliance Check')
            );
            
            if (!hasExistingTemplateComment) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: templateGuideComment
              });
              
              console.log('✅ Posted template compliance guide comment');
            } else {
              console.log('ℹ️  Template compliance comment already exists, skipping');
            }
            
            // Add a label to indicate template needs work
            if (complianceScore < 50) {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: prNumber,
                labels: ['needs: template completion']
              });
            }
          } else {
            console.log('✅ PR template compliance is good!');
            
            // Remove the label if it exists and compliance is now good
            try {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: prNumber,
                name: 'needs: template completion'
              });
            } catch (error) {
              // Label might not exist, which is fine
              console.log('ℹ️  Template completion label not found (which is good!)');
            }
            
            // Post a brief appreciation comment for well-structured PRs
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });
            
            const hasAppreciationComment = comments.some(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('excellently structured')
            );
            
            if (!hasAppreciationComment && complianceScore >= 90) {
              const appreciationComment = `## 🌟 Excellent PR Structure!\n\n` +
                `Thank you @${prAuthor} for the excellently structured pull request! ` +
                `Your detailed description makes it easy for reviewers to understand your contribution. 🚀\n\n` +
                `**Template Compliance: ${complianceScore}%** ✅\n\n` +
                `This PR will now be reviewed by our maintainers. Keep up the great work! 💪`;
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: appreciationComment
              });
            }
          }