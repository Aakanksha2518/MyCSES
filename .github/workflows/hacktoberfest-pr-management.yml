name: Hacktoberfest PR Management

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [closed]

jobs:
  manage-hacktoberfest-labels:
    runs-on: ubuntu-latest
    
    steps:
    - name: Add hacktoberfest-accepted label on approval
      if: github.event.review.state == 'approved' || (github.event.action == 'closed' && github.event.pull_request.merged == true)
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          
          // Get current labels
          const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const labelNames = currentLabels.map(label => label.name);
          
          // Only add hacktoberfest-accepted if PR has hacktoberfest label
          if (labelNames.includes('hacktoberfest')) {
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: ['hacktoberfest-accepted']
              });
              
              console.log('Added hacktoberfest-accepted label to PR #' + prNumber);
              
              // Add a congratulatory comment
              const congratsMessage = `
## 🎉 Congratulations! 

Your pull request has been **approved** and merged! 

### 🎃 Hacktoberfest Credit
This PR now has the \`hacktoberfest-accepted\` label, which means it counts toward your Hacktoberfest 2025 contribution goals!

### 🌟 Thank You
Thank you for contributing to MyCSES and helping improve our competitive programming solutions repository. Your contribution makes a difference!

### 🚀 What's Next?
- Feel free to work on more issues
- Help review other contributors' PRs  
- Share this repository with other competitive programmers
- Star the repository if you found it helpful!

Keep coding and happy Hacktoberfest! 🎃🚀
              `;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: congratsMessage
              });
              
            } catch (error) {
              console.error('Error managing hacktoberfest labels:', error);
            }
          }

    - name: Handle rejected or closed PRs
      if: github.event.review.state == 'changes_requested' || (github.event.action == 'closed' && github.event.pull_request.merged == false)
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          
          // Get current labels
          const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const labelNames = currentLabels.map(label => label.name);
          
          // Remove hacktoberfest-accepted if it exists and add invalid if PR was closed without merging
          if (github.event.action === 'closed' && !github.event.pull_request.merged) {
            try {
              // Remove hacktoberfest-accepted if present
              if (labelNames.includes('hacktoberfest-accepted')) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: 'hacktoberfest-accepted'
                });
              }
              
              // Add invalid label for spam/low-quality PRs (only if closed without merging)
              const prBody = (context.payload.pull_request.body || '').toLowerCase();
              const prTitle = context.payload.pull_request.title.toLowerCase();
              
              // Check for spam indicators
              const spamIndicators = ['spam', 'test', 'readme update only', 'minor fix'];
              const isSpam = spamIndicators.some(indicator => 
                prTitle.includes(indicator) || prBody.includes(indicator)
              );
              
              if (isSpam) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  labels: ['invalid']
                });
                
                console.log('Added invalid label to closed PR #' + prNumber);
              }
              
            } catch (error) {
              console.error('Error handling closed PR:', error);
            }
          }
          
          // Provide feedback for PRs that need changes
          if (github.event.review.state === 'changes_requested') {
            const feedbackMessage = `
## 📝 Changes Requested

Thank you for your contribution! The reviewer has requested some changes to improve your PR.

### 🔄 Next Steps
1. Address the feedback provided in the review
2. Make the necessary changes to your code
3. Test your solution thoroughly
4. Push the updates to your branch

### 💡 Tips
- Read our [Contributing Guidelines](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/CONTRIBUTING.md) for best practices
- Ensure your solution follows our coding standards
- Test against CSES judge before resubmitting

Once you've addressed the feedback, your PR will be reviewed again. Keep up the great work! 🚀
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: feedbackMessage
            });
          }